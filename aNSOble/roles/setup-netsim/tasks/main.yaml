- name: Check if there are running netsim devices
  stat:
    path: /var/opt/ncs/packages/netsim
  become: true
  register: netsim_dir

- name: Stop and delete existing netsim devices
  shell: ncs-netsim delete-network >> /tmp/aNSOble.log
  environment:
    PATH: /opt/ncs/current/bin:{{ ansible_env.PATH }}
  become: true
  args:
    chdir: /var/opt/ncs/packages/
  when: netsim_dir.stat.exists

- name: Create Netsim Devices
  shell: |
    source /opt/ncs/current/ncsrc
    ncs-netsim {{  "create-network" if item.name == NetsimDevices[0].name  else "add-to-network" }} {{item.name}} {{item.numberofDevices}} {{item.deviceNamePrefix}}
  become: true
  args:
    chdir: /var/opt/ncs/packages/
    executable: /bin/bash
  loop: "{{ NetsimDevices }}"

- name: Starting netsim devices
  shell: ncs-netsim start >> /tmp/aNSOble.log
  environment:
    PATH: /opt/ncs/current/bin:{{ ansible_env.PATH }}
  become: true
  args:
    chdir: /var/opt/ncs/packages/

- name: Generating netsim devices NSO config
  shell: ncs-netsim ncs-xml-init > /home/{{ ansible_user }}/devices-config.xml 
  environment:
    PATH: /opt/ncs/current/bin:{{ ansible_env.PATH }}
  become: true
  args:
    chdir: /var/opt/ncs/packages/

- name: Load netsin devices config
  shell: ncs_load -l -m devices-config.xml
  environment:
    PATH: /opt/ncs/current/bin:{{ ansible_env.PATH }}

- name: Loading devices SSH keys
  shell: |
    source /opt/ncs/current/ncsrc
    echo 'devices device * ssh fetch-host-keys' | ncs_cli -C
  environment:
    PATH: /opt/ncs/current/bin:{{ ansible_env.PATH }}

- name: Executing sync-from netsim devices
  shell: |
    source /opt/ncs/current/ncsrc
    echo 'devices device * sync-from' | ncs_cli -C
  environment:
    PATH: /opt/ncs/current/bin:{{ ansible_env.PATH }}



